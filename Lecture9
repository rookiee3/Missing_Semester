# Entropy
  - Suppose a password is chosen as a concatenation of four lower-case dictionary words, where each word is selected uniformly at random from a dictionary of size 100,000. An example of such a password is correcthorsebatterystaple. How many bits of entropy does this have?
    log2( 100000^4 ) = 66
    
  - Consider an alternative scheme where a password is chosen as a sequence of 8 random alphanumeric characters (including both lower-case and upper-case letters). An example is rg8Ql34g. How many bits of entropy does this have?
    log( (26 + 26 + 10)^8 ) = 48
    
  - Which is the stronger password?
    the password who has bigger entropy
    
  - Suppose an attacker can try guessing 10,000 passwords per second. On average, how long will it take to break each of the passwords?
    1st: (100000^4) / 10000
    2nd: (62^8) / 10000
    
# Cryptographic hash functions
  - Download a Debian image from a mirror (e.g. from this Argentinean mirror). Cross-check the hash (e.g. using the sha256sum command) with the hash retrieved from the official Debian site (e.g. this file hosted at debian.org, if youâ€™ve downloaded the linked file from the Argentinean mirror).
    curl -O -L -C - http://debian.xfree.com.ar/debian-cd/current/amd64/iso-cd/debian-mac-10.9.0-amd64-netinst.iso
    http://debian.xfree.com.ar/debian-cd/current/amd64/iso-cd/debian-mac-10.9.0-amd64-netinst.iso | sha256sum
   
# Symmetric cryptography
  - OpenSSL: openssl aes-256-cbc -salt -in {input filename} -out {output filename}. Look at the contents using cat or hexdump. Decrypt it with openssl aes-256-cbc -d -in {input filename} -out {output filename} and confirm that the contents match the original using cmp.
    openssl aes-256-cbc -salt -in sfile -out sfile
    cat sfile
    openssl aes-256-cbc -salt -in sfile -out sfil -d -in sfile -out sfile
    
# Asymmetric cryptography
  - Set up SSH keys on a computer you have access to (not Athena, because Kerberos interacts weirdly with SSH keys). Make sure your private key is encrypted with a passphrase, so it is protected at rest.
    ssh-keygen -t ed25519 
    
  - Set up GPG
    sudo apt-get update
    sudo apt-get install gnupg
    
  - Send Anish an encrypted email (public key).
    gpg --encrypt --sign --armor -r me@anishathalye.com name_of_fil
    
  - Sign a Git commit with git commit -S or create a signed Git tag with git tag -s. Verify the signature on the commit with git show --show-signature or on the tag with git tag -v.
    git commit -S -m "sign a commit"
